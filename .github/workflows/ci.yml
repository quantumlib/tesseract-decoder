name: ci

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Cancels a previous run if a new commit is made on the same pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  clang-format-check:
    name: Clang code formatting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Run clang-format check
      run: |
        clang-format --version
        files=$(git ls-files '*.cc' '*.cpp' '*.h' '*.hpp')
        [ -z "$files" ] || clang-format --dry-run --Werror $files

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Bazel
      uses: bazel-contrib/setup-bazel@0.14.0
      with:
        bazelisk-cache: true
        disk-cache: ${{ github.workflow }}
        repository-cache: true

    - name: Install clang-format (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Install clang-format (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install clang-format

    - name: Check formatting (redundant but allowed)
      run: |
        clang-format --version
        files=$(git ls-files '*.cc' '*.cpp' '*.h' '*.hpp')
        [ -z "$files" ] || clang-format --dry-run --Werror $files

    - name: Bazel tests
      run: bazel test src:all
